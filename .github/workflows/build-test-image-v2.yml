name: Build Testing Container Package v2

on:
  workflow_dispatch:
  push:
    paths:
    - '!.github/**'

jobs:
  build-test-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - 20.11.9
          #- 21.08.8-2
          #- 22.05.5

    env:
      base_tag:     ghcr.io/eth-cscs/slurm-container-${{ matrix.version }}:latest
      tag:          ghcr.io/eth-cscs/slurm-uenv-mount-tester-${{ matrix.version }}:latest
      cache_file:   slurm-uenv-mount-tester-${{ matrix.version }}_latest.tar.gz
      user_flags:   -u testuser -w /home/testuser
      NODE_HW:      CPUS=2

    steps:
# ------------------------------------------------------------------------
#  Build the host container and plugin
# ------------------------------------------------------------------------
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.cache_file }}
        key: ${{ runner.os }}-${{ hashFiles('./*', 'ci/*') }}
        
    - name: Build Image
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker build \
          -f ci/Dockerfile.test \
          -t ${{ env.tag }} \
          --build-arg DOCKER_CONTAINER=${{ env.base_tag }} \
          .
        docker save ${{ env.tag }} | gzip > ${{ env.cache_file }}
      env:
        DOCKER_BUILDKIT: 1
      
    - name: Load Image
      run: docker load < ${{ env.cache_file }}
   
    - name: Start Docker Container
      run: |
        ID=$(docker run --detach --privileged -e NODE_HW=${{ env.NODE_HW }} -t ${{ env.tag }})
        echo "ID=$ID" >> $GITHUB_ENV
      
    - name: Run Tests
      run: |
        ID=$(docker run --privileged -e NODE_HW=${{ env.NODE_HW }} -t ${{ env.tag }} run_tests)
        docker exec ${{ env.user_flags }} ${{ env.ID }} /testuser-entrypoint.sh make tests

# ------------------------------------------------------------------------
#  Publish the complete container and the plugin itself
# ------------------------------------------------------------------------
    - name: Push Docker Image
      run: docker push ${{ env.tag }}
